<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.czj.rbac.mapper.SysRoleMapper">
    
    <resultMap id="BaseResultMap" type="com.czj.rbac.model.SysRole">
        <id column="id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="role_code" property="roleCode"/>
        <result column="description" property="description"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 带权限信息的角色结果映射 -->
    <resultMap id="RoleWithPermissionsMap" type="com.czj.rbac.model.vo.RoleVO" extends="BaseResultMap">
        <collection property="permissions" ofType="com.czj.rbac.model.vo.PermissionVO">
            <id column="permission_id" property="id"/>
            <result column="permission_name" property="permissionName"/>
            <result column="permission_code" property="permissionCode"/>
            <result column="permission_type" property="type"/>
            <result column="permission_status" property="status"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id, role_name, role_code, description, status, create_time, update_time
    </sql>

    <select id="findByRoleCode" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM sys_role 
        WHERE role_code = #{roleCode}
    </select>

    <select id="findById" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM sys_role 
        WHERE id = #{id}
    </select>

    <!-- 查询角色详情(包含权限信息) -->
    <select id="findRoleDetail" resultMap="RoleWithPermissionsMap">
        SELECT 
            r.*,
            p.id as permission_id,
            p.permission_name,
            p.permission_code,
            p.type as permission_type,
            p.status as permission_status
        FROM sys_role r
        LEFT JOIN sys_role_permission rp ON r.id = rp.role_id
        LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.id = #{roleId}
        AND r.status = 1
    </select>

    <select id="findList" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM sys_role
        <where>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <select id="findRolesByUserId" resultMap="BaseResultMap">
        SELECT r.* 
        FROM sys_role r
        INNER JOIN sys_user_role ur ON r.id = ur.role_id
        WHERE ur.user_id = #{userId}
        AND r.status = 1
    </select>

    <insert id="insert" parameterType="com.czj.rbac.model.SysRole" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_role (
            role_name, role_code, description, status
        ) VALUES (
            #{roleName}, #{roleCode}, #{description}, #{status}
        )
    </insert>

    <update id="update" parameterType="com.czj.rbac.model.SysRole">
        UPDATE sys_role
        <set>
            <if test="roleName != null">role_name = #{roleName},</if>
            <if test="roleCode != null">role_code = #{roleCode},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM sys_role WHERE id = #{id}
    </delete>

    <!-- 批量插入角色权限关联 -->
    <insert id="batchInsertRolePermissions">
        INSERT INTO sys_role_permission (role_id, permission_id) VALUES
        <foreach collection="permissionIds" item="permissionId" separator=",">
            (#{roleId}, #{permissionId})
        </foreach>
    </insert>

    <!-- 批量删除角色权限关联 -->
    <delete id="batchDeleteRolePermissions">
        DELETE FROM sys_role_permission 
        WHERE role_id = #{roleId} 
        AND permission_id IN
        <foreach collection="permissionIds" item="permissionId" open="(" separator="," close=")">
            #{permissionId}
        </foreach>
    </delete>

    <!-- 检查角色是否拥有指定权限 -->
    <select id="hasPermission" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM sys_role_permission
        WHERE role_id = #{roleId}
        AND permission_id = #{permissionId}
    </select>

    <!-- 获取角色的所有权限ID -->
    <select id="findPermissionIdsByRoleId" resultType="long">
        SELECT permission_id
        FROM sys_role_permission
        WHERE role_id = #{roleId}
    </select>

    <delete id="deleteBatchByIds">
        DELETE FROM sys_role WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="checkRoleCode" resultType="int">
        SELECT COUNT(*) FROM sys_role WHERE role_code = #{roleCode}
    </select>

    <update id="updateStatus">
        UPDATE sys_role SET status = #{status} WHERE id = #{id}
    </update>

    <select id="findByIds" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM sys_role
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- 以下是分页相关的方法,暂时注释掉 -->
    <!--
    <select id="findPage" resultMap="BaseResultMap">
        SELECT DISTINCT r.*
        FROM sys_role r
        <if test="userId != null">
            LEFT JOIN sys_user_role ur ON r.id = ur.role_id
        </if>
        <where>
            <if test="roleName != null and roleName != ''">
                AND r.role_name LIKE CONCAT('%', #{roleName}, '%')
            </if>
            <if test="roleCode != null and roleCode != ''">
                AND r.role_code LIKE CONCAT('%', #{roleCode}, '%')
            </if>
            <if test="status != null">
                AND r.status = #{status}
            </if>
            <if test="userId != null">
                AND ur.user_id = #{userId}
            </if>
        </where>
        ORDER BY r.create_time DESC
        LIMIT #{offset}, #{size}
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(DISTINCT r.id) 
        FROM sys_role r
        <if test="userId != null">
            LEFT JOIN sys_user_role ur ON r.id = ur.role_id
        </if>
        <where>
            <if test="roleName != null and roleName != ''">
                AND r.role_name LIKE CONCAT('%', #{roleName}, '%')
            </if>
            <if test="roleCode != null and roleCode != ''">
                AND r.role_code LIKE CONCAT('%', #{roleCode}, '%')
            </if>
            <if test="status != null">
                AND r.status = #{status}
            </if>
            <if test="userId != null">
                AND ur.user_id = #{userId}
            </if>
        </where>
    </select>

    <select id="findPageWithFilter" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_role
        <where>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="roleName != null and roleName != ''">
                AND role_name LIKE CONCAT('%', #{roleName}, '%')
            </if>
            <if test="roleCode != null and roleCode != ''">
                AND role_code LIKE CONCAT('%', #{roleCode}, '%')
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>
    
    <select id="countWithFilter" resultType="int">
        SELECT COUNT(*)
        FROM sys_role
        <where>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="roleName != null and roleName != ''">
                AND role_name LIKE CONCAT('%', #{roleName}, '%')
            </if>
            <if test="roleCode != null and roleCode != ''">
                AND role_code LIKE CONCAT('%', #{roleCode}, '%')
            </if>
        </where>
    </select>
    -->

    

</mapper> 