<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.czj.rbac.mapper.SysPermissionMapper">
    
    <resultMap id="BaseResultMap" type="com.czj.rbac.model.SysPermission">
        <id column="id" property="id"/>
        <result column="permission_name" property="permissionName"/>
        <result column="permission_code" property="permissionCode"/>
        <result column="description" property="description"/>
        <result column="pid" property="pid"/>
        <result column="sort_order" property="sortOrder"/>
        <result column="type" property="type"/>
        <result column="path" property="path"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <resultMap id="TreeResultMap" type="com.czj.rbac.model.SysPermission" extends="BaseResultMap">
        <collection property="children" ofType="com.czj.rbac.model.SysPermission" column="id" 
            select="findByParentId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, permission_name, permission_code, description, pid, sort_order, type, path, status, create_time, update_time
    </sql>

    <select id="findByPermissionCode" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM sys_permission 
        WHERE permission_code = #{permissionCode}
    </select>

    <select id="findById" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM sys_permission 
        WHERE id = #{id}
    </select>

    <select id="findList" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM sys_permission
        <where>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="type != null">
                AND type = #{type}
            </if>
        </where>
        ORDER BY pid, sort_order DESC
    </select>

    <select id="findByParentId" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM sys_permission 
        WHERE pid = #{pid}
        AND status = 1
        ORDER BY sort_order ASC, create_time DESC
    </select>

    <select id="findPermissionsByRoleId" resultMap="BaseResultMap">
        SELECT p.* 
        FROM sys_permission p
        INNER JOIN sys_role_permission rp ON p.id = rp.permission_id
        WHERE rp.role_id = #{roleId}
        AND p.status = 1
    </select>

    <select id="findPermissionsByUserId" resultMap="BaseResultMap">
        SELECT DISTINCT p.* 
        FROM sys_permission p
        INNER JOIN sys_role_permission rp ON p.id = rp.permission_id
        INNER JOIN sys_user_role ur ON rp.role_id = ur.role_id
        WHERE ur.user_id = #{userId}
        AND p.status = 1
    </select>

    <insert id="insert" parameterType="com.czj.rbac.model.SysPermission" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_permission (
            permission_name, permission_code, description, pid, sort_order, type, path, status
        ) VALUES (
            #{permissionName}, #{permissionCode}, #{description}, #{pid}, #{sortOrder}, #{type}, #{path}, #{status}
        )
    </insert>

    <update id="update" parameterType="com.czj.rbac.model.SysPermission">
        UPDATE sys_permission
        <set>
            <if test="permissionName != null">permission_name = #{permissionName},</if>
            <if test="permissionCode != null">permission_code = #{permissionCode},</if>
            <if test="description != null">description = #{description},</if>
            <if test="pid != null">pid = #{pid},</if>
            <if test="sortOrder != null">sort_order = #{sortOrder},</if>
            <if test="type != null">type = #{type},</if>
            <if test="path != null">path = #{path},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM sys_permission WHERE id = #{id}
    </delete>

    <select id="findPage" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM sys_permission
        <where>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="type != null and type != ''">
                AND type = #{type}
            </if>
        </where>
        ORDER BY pid, sort_order ASC, create_time DESC
        LIMIT #{offset}, #{size}
    </select>

    <select id="findPermissionTree" resultMap="TreeResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM sys_permission
        WHERE pid IS NULL OR pid = 0
        <if test="type != null">
            AND type = #{type}
        </if>
        ORDER BY sort_order ASC, create_time DESC
    </select>

    <delete id="deleteBatchByIds">
        DELETE FROM sys_permission WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="checkPermissionCode" resultType="int">
        SELECT COUNT(*) FROM sys_permission WHERE permission_code = #{permissionCode}
    </select>

    <update id="updateStatus">
        UPDATE sys_permission SET status = #{status} WHERE id = #{id}
    </update>

    <select id="countByParentId" resultType="int">
        SELECT COUNT(*) FROM sys_permission WHERE pid = #{pid}
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*) 
        FROM sys_permission
        <where>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="type != null and type != ''">
                AND type = #{type}
            </if>
        </where>
    </select>

    <select id="countByRolePermissions" resultType="int">
        SELECT COUNT(*) FROM sys_role_permission WHERE permission_id = #{permissionId}
    </select>

    <!-- 根据用户ID查询权限列表 -->
    <select id="findByUserId" resultType="com.czj.rbac.model.vo.PermissionVO">
        SELECT DISTINCT
            p.id,
            p.permission_name,
            p.permission_code,
            p.pid,
            p.status
        FROM sys_permission p
        INNER JOIN sys_role_permission rp ON p.id = rp.permission_id
        INNER JOIN sys_user_role ur ON rp.role_id = ur.role_id
        WHERE ur.user_id = #{userId}
        AND p.status = 1
    </select>

    <!-- 根据ID列表统计权限数量 -->
    <select id="countByIds" resultType="int">
        SELECT COUNT(*)
        FROM sys_permission
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND status = 1
    </select>

    <select id="findByIds" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM sys_permission
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper> 